definitions:
  models.User:
    properties:
      createdAt:
        type: string
      email:
        type: string
      id:
        type: string
      isNew:
        description: is new user, password not changed from default
        type: boolean
      role:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  models.UserInput:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      id:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - confirm_password
    - email
    - id
    - password
    - username
    type: object
info:
  contact: {}
paths:
  /user:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: Get all users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Create a user
      parameters:
      - description: New User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.User'
      summary: Create a user
      tags:
      - user
  /user/{user_id}:
    delete:
      description: Delete a user
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      summary: Delete a user
      tags:
      - user
    get:
      description: Get a single user by its UUID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get a user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: Updated User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserInput'
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Update a user
      tags:
      - user
swagger: "2.0"
